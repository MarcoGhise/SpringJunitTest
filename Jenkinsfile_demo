def CONTAINER_NAME="jenkins-pipeline"
def CONTAINER_TAG="latest"
def HTTP_PORT="8082"
def TEST_URL="http://localhost:${HTTP_PORT}/SpringJunitTest/lastnamejson?firstname=James"
def TEST_TEXT="{\"id\":1,\"name\":\"Dean\"}"

node {

    stage('Checkout') {
        git 'https://github.com/MarcoGhise/SpringJunitTest.git'
        //checkout scm
    }

    stage('Unit Test'){
        sh "mvn -U clean compile"
    }
    
    stage('Package'){
        sh "mvn package -DskipTests"
    }

    stage("Image Clear up"){      
      try {
          sh "sudo docker stop mysql"
          sh "sudo docker rm -f mysql"
          sh "sudo docker stop $CONTAINER_NAME"
          sh "sudo docker rm -f $CONTAINER_NAME"
          sh "sudo docker rmi $CONTAINER_NAME:$CONTAINER_TAG"
      } catch(error){}
      echo "Image Clear up completed"
    }

    stage('Image Build'){
      echo "Image build completed"
      sh "sudo docker build -t $CONTAINER_NAME:$CONTAINER_TAG  -t $CONTAINER_NAME --pull --no-cache ."
      echo "Image build complete"
    }

    stage('Run App'){    
      sh "sudo docker run --name mysql -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql:5.5"
      sleep(10)
      sh "sudo docker run -d -p $HTTP_PORT:8080 --link mysql:mysql --name $CONTAINER_NAME $CONTAINER_NAME:$CONTAINER_TAG"
      echo "Application started on port: ${HTTP_PORT} (http)"  
      echo "Image Run App completed"
    }
 
    stage('Integration Test'){
      sleep(10)
      sh "sudo docker exec -i mysql mysql -e \"create schema junit;use junit;DROP TABLE IF EXISTS Customers;CREATE TABLE Customers (  id INT NOT NULL AUTO_INCREMENT,  first_name VARCHAR(30),  last_name  VARCHAR(30),  PRIMARY KEY (id));INSERT INTO Customers VALUES (1, 'James', 'Dean');INSERT INTO Customers VALUES (2, 'Larry', 'Bird');\""
      def response = httpRequest "${TEST_URL}"
      println("Status: "+response.status)
      println("Content: "+response.content)
      if (!response.content.contains("${TEST_TEXT}"))
      {
          echo '[FAILURE] Failed to verify TEST_TEXT'
          currentBuild.result = 'FAILURE'
          return
      }
      echo "Image Integration Test completed"       
    }
}
